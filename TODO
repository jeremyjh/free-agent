0.2.0:

  Common/Core:
   * update logger quasi-quotes to populate source from Loc

  Executive: 
   * Triggers - an Action to run when a matching Action or Result <event> takes place - a
     generalization of current listener functionality  - for example Schedule should
     be notified when an Action is unregistered

  Command Line Interface
   * startup load file definitions - update AgentDB actions IF newer
   * switch optparse-applicative
   * user-definable options

  Actions: 
   * ActionPlan - an Action, Schedule, Retry Specification and Target
   * Retries

  Refactor: 
  
1.0.0: 

  Security model:
  * authentication, authorization?
     * ACLs? (maybe with meta [])
     * HMAC ?
  * signer keys for plugins?
  * TLS?
  * Network.Transport.ZMQ supports authentication

  Performance:
  * network-transport-cci

  Database
  * Execution/Result history impl using LevelDb
  * Execution/Result history impl using HDBC or persistent

  REST Interface (as Server Contract)

  ScriptAction 
    * HaskellScript (using hint?)
    * defined json in/out interface
      * ScriptAction type defines interpreter invocation (e.g. /usr/bin/ruby)
      * Manage list of defined ScriptAction types in DB
      * Ruby implementation and examples
