0.2.0:

  Common/Core:
   * generalize StateHandle terminology to manage any sort of state object
   * switch logging to hslogger or DP platform logger 
   * update quasi-quotes to populate source from Loc

  Scheduler:
    * code it

  Managed Agent:
   * refactor common code in agent handlers
  
  Command Line Interface
   * File Action Definitions (json/yaml)
      * startup load file definitions - update AgentDB actions IF newer
  
  Actions: 
   * Composites / Wrappers:
     * CompositeAction - list of Actions to exec together

   * Core Action definitions:
      * Command (shell/createProcess) (pull out of Nagios)
  
  Result Alerting
  * Generic Listener - AgentServer w/ pluggable backend like History
  * Result Alerting Rules

  Decisions
  * Does Runnable get an "extract" method? This may be needed for MetaAction.

  (maybe include)

  Actions: 
   * MetaAction (provides Metadata to ... Executive? more routing?)
          * CompositeAction - list of Actions to exec together
  
1.0.0: 
  Database
  * Execution/Result history impl using LevelDb
  * Execution/Result history impl using HDBC or persistent

  REST Interface (as Server Contract)

  ScriptAction 
    * HaskellScript (using hint?)
  	* defined json in/out interface
          * ScriptAction type defines interpreter invocation (e.g. /usr/bin/ruby)
          * Manage list of defined ScriptAction types in AgentDB
          * Ruby implementation and examples
